{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","array","type","value","onChange","target","prototype","PropTypes","func","isRequired","GifGridItem","id","title","url","className","src","alt","getGif","category","a","encodeURI","fetch","resp","json","data","map","img","images","downsized_medium","gifs","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"gPAEMA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,KAYzC,OACE,0BAAMC,SARa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAYP,GAAZ,mBAA2BO,OACzCN,EAAc,OAKd,4CACA,2BAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAbhB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,YAiB3BZ,EAAYe,UAAY,CACtBd,c,OAAee,EAAUC,KAAKC,YAGjBlB,QChBAmB,EATK,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAChC,OACE,yBAAKC,UAAU,8CACb,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCLGK,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdN,EADc,iDACkCO,UACpDF,GAFkB,sDAIDG,MAAMR,GAJL,cAIdS,EAJc,gBAKGA,EAAKC,OALR,uBAKZC,EALY,EAKZA,KALY,UAMDA,EAAKC,KAAI,SAACC,GAAS,IAAD,EACnC,MAAO,CACLf,GAAIe,EAAIf,GACRC,MAAOc,EAAId,MACXC,IAAG,UAAEa,EAAIC,cAAN,aAAE,EAAYC,iBAAiBf,QAVlB,eAMdgB,EANc,yBAabA,GAba,4CAAH,sDCoBJC,EAhBC,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECDN,SAACA,GAAc,IAAD,EACdzB,mBAAS,CACjC+B,KAAM,GACNO,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAaxC,OARAC,qBAAU,WACRjB,EAAOC,GAAUiB,MAAK,SAACC,GACrBH,EAAS,CACPT,KAAMY,EACNL,SAAS,SAGZ,CAACb,IACGc,EDX2BK,CAAanB,GAAjCS,EADkB,EACxBH,KAAcO,EADU,EACVA,QAEtB,OACE,oCACE,wBAAIjB,UAAU,sCAAsCI,GACnDa,GAAW,uBAAGjB,UAAU,qCAAb,WACZ,yBAAKA,UAAU,aACZa,EAAOF,KAAI,SAACC,GAAD,OACV,kBAAC,EAAD,eAAaY,IAAKZ,EAAIf,IAAQe,UEOzBa,EAjBM,WAAO,IAAD,EACW9C,mBAAS,CAAC,cADrB,mBAClB+C,EADkB,KACNhD,EADM,KAEzB,OACE,oCACE,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BACGgD,EAAWf,KAAI,SAACP,GAAD,OACd,kBAAC,EAAD,CAASoB,IAAKpB,EAAUA,SAAUA,UCR5CuB,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,W","file":"static/js/main.7df16549.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nconst AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((array) => [inputValue, ...array]);\r\n      setInputValue('');\r\n    }\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2>Add Category</h2>\r\n      <input type='text' value={inputValue} onChange={handleInputChange} />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.prototype = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddCategory;\r\n","import React from 'react';\r\nconst GifGridItem = ({ id, title, url }) => {\r\n  return (\r\n    <div className='card animate__animated animate__fadeInDown'>\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifGridItem;\r\n","export const getGif = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    category\r\n  )}&api_key=EhXXl3PSDdfPkcmISE8DNGRv7xhBlObs`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n  const gifs = await data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url,\r\n    };\r\n  });\r\n  return gifs;\r\n};\r\n","import React from 'react';\r\nimport GifGridItem from './GifGridItem';\r\nimport { useFetchGifs } from './../hooks/useFetchGifs';\r\n\r\nconst GifGrid = ({ category }) => {\r\n  const { data: images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=' animate__animated animate__fadeIn'>{category}</h3>\r\n      {loading && <p className=' animate__animated animate__flash'>Loading</p>}\r\n      <div className='card-grid'>\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useState, useEffect } from 'react';\r\nimport { getGif } from './../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n  useEffect(() => {\r\n    getGif(category).then((imgs) => {\r\n      setState({\r\n        data: imgs,\r\n        loading: false,\r\n      });\r\n    });\r\n  }, [category]);\r\n  return state;\r\n};\r\n","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\nconst GifExpertApp = () => {\r\n  const [categories, setCategories] = useState(['One Punch']);\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n\r\n      <ol>\r\n        {categories.map((category) => (\r\n          <GifGrid key={category} category={category} />\r\n        ))}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}